FROM php:%%DOCKER_IMAGE%%-alpine AS ext-amqp

ENV EXT_AMQP_VERSION=master

RUN docker-php-source extract \
    && apk -Uu add git rabbitmq-c-dev \
    && git clone --branch $EXT_AMQP_VERSION --depth 1 https://github.com/php-amqp/php-amqp.git /usr/src/php/ext/amqp \
    && cd /usr/src/php/ext/amqp && git submodule update --init \
    && docker-php-ext-install amqp

RUN ls -al /usr/local/lib/php/extensions/

FROM php:%%DOCKER_IMAGE%%-alpine

LABEL maintainer="noitran.black@gmail.com"

ENV LANG="en_US.UTF-8"
ENV LC_ALL="en_US.UTF-8"
ENV LANGUAGE="en_US.UTF-8"

ENV PHP_OPCACHE_ENABLE="1"
ENV PHP_OPCACHE_ENABLE_CLI="1"

ARG ALPINE_VERSION=3.12
ARG PECL_AMQP_VERSION=1.10.2

ARG INSTALL_OPCACHE=true
ARG INSTALL_AMQP=true

# Add Repositories
RUN set -eux; \
    rm -f /etc/apk/repositories &&\
    echo "http://dl-cdn.alpinelinux.org/alpine/v${ALPINE_VERSION}/main" >> /etc/apk/repositories && \
    echo "http://dl-cdn.alpinelinux.org/alpine/v${ALPINE_VERSION}/community" >> /etc/apk/repositories

RUN set -eux; \
    # Temporary Build depencencies for compiling Pecl extensions
    apk add --update --no-cache --virtual .local-build-deps $PHPIZE_DEPS icu-dev && \
    # Add Build Dependencies
    apk add --update --no-cache --virtual .local-build-deps \
        icu-dev && \
    # Add Production Dependencies
    apk add --update --no-cache \
        curl \
        postgresql-dev && \
    # Configure and Install PHP Extensions
    docker-php-ext-install \
        pdo_mysql \
        pdo_pgsql \
        intl \
        pcntl && \
    apk del -f .local-build-deps

# If you want to use OPcache with Xdebug, you must load OPcache before Xdebug !
# https://www.php.net/manual/en/opcache.installation.php
RUN if [ ${INSTALL_OPCACHE} = true ]; then \
    set -eux; \
    apk add --update --no-cache --virtual .phpize-deps $PHPIZE_DEPS && \
    docker-php-ext-install opcache && \
    apk del -f .phpize-deps \
;fi

COPY --from=ext-amqp /usr/local/etc/php/conf.d/docker-php-ext-amqp.ini /tmp/docker-php-ext-amqp.ini
COPY --from=ext-amqp /usr/local/lib/php/extensions/no-debug-non-zts-20200930/amqp.so /tmp/amqp.so

# Install and Configure Amqp / RabbitMQ
# https://stackoverflow.com/questions/60709766/alpine-with-amqp-php-extension
RUN if [ ${INSTALL_AMQP} = true ]; then \
    set -eux; \
    apk add --update --no-cache --virtual .phpize-deps $PHPIZE_DEPS && \
    apk add --update --no-cache rabbitmq-c-dev && \
    # Install the amqp extension
    cp /tmp/docker-php-ext-amqp.ini /usr/local/etc/php/conf.d/docker-php-ext-amqp.ini; \
    cp /tmp/amqp.so /usr/local/lib/php/extensions/no-debug-non-zts-20200930/amqp.so; \
    # pecl install amqp-${PECL_AMQP_VERSION} && \
    # docker-php-ext-enable amqp && \
    # Install the sockets extension
    docker-php-ext-install sockets && \
    apk del -f .phpize-deps \
;fi

COPY ./configs/php.ini /usr/local/etc/php/conf.d/
COPY ./configs/opcache.ini /usr/local/etc/php/conf.d/
