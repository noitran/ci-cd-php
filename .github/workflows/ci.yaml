name: Github Docker CI

# https://github.community/t/support-saving-environment-variables-between-steps/16230/6

on:
  push:
    branches: master
  schedule:
    - cron: 0 0 * * 6

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php_version: ['7.4']
    steps:
      - uses: actions/checkout@v2
      - name: Build the Docker image
        env:
          PHP_VERSION: ${{ matrix.php_version }}
          DOCKER_IMAGE: ${{ matrix.php_version }}-fpm
          DOCKER_TEMPLATE: ${{ matrix.php_version }}-fpm-debian
          IMAGE_TAG: noitran/php-base:${{ matrix.php_version }}-fpm-debian-latest
        run: |
          echo "::set-env name=php_version::${PHP_VERSION}"
          echo "::set-env name=docker_image::${DOCKER_IMAGE}"
          echo "::set-env name=docker_template::${DOCKER_TEMPLATE}"
          echo "::set-env name=image_tag::${IMAGE_TAG}"
          sed -e "s/%%DOCKER_IMAGE%%/${DOCKER_IMAGE}/g" ${DOCKER_TEMPLATE}/Dockerfile.template > ${DOCKER_TEMPLATE}/Dockerfile
          docker build -t ${IMAGE_TAG} ${DOCKER_TEMPLATE}
          docker image ls
      - uses: e1himself/goss-installation-action
      - name: Test image which was built
        if: success()
        run: |
          GOSS_FILES_PATH=${{ env.docker_template }} dgoss run -t ${{ env.image_tag }}
      - name: Push image to Docker hub
        if: success()
        run: |
          echo ${{ secrets.DOCKER_HUB_PASSWORD }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
          docker push ${{ env.image_tag }}
          docker logout
